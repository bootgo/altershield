/*
 * MIT License
 *
 * Copyright (c) [2023]
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.alipay.altershield.defender.framework.exe.dal.mapper;

import com.alipay.altershield.defender.framework.exe.dal.dataobject.ExeDefenderDetectDO;
import com.alipay.altershield.defender.framework.exe.dal.dataobject.ExeDefenderDetectParam;
import java.util.List;
import org.apache.ibatis.annotations.Param;

/**
 * This class was generated by Ali-Generator
 * @author xiangyue
 */
public interface ExeDefenderDetectMapper {
    /**
     * 根据WHERE条件COUNT
     * @param exeDefenderDetectParam
     * @return
     *
     * @mbg.generated
     */
    long countByParam(ExeDefenderDetectParam exeDefenderDetectParam);

    /**
     * 根据WHERE条件删除
     * @param exeDefenderDetectParam
     * @return
     *
     * @mbg.generated
     */
    int deleteByParam(ExeDefenderDetectParam exeDefenderDetectParam);

    /**
     * 根据主键删除
     * @param detectExeId
     * @return
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String detectExeId);

    /**
     * 插入单条记录
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int insert(ExeDefenderDetectDO record);

    /**
     * 根据字段选择性插入单条记录
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int insertSelective(ExeDefenderDetectDO record);

    /**
     * 根据WHERE条件查询，返回不包含长文本字段
     * @param exeDefenderDetectParam
     * @return
     *
     * @mbg.generated
     */
    List<ExeDefenderDetectDO> selectByParam(ExeDefenderDetectParam exeDefenderDetectParam);

    /**
     * 根据主键查询
     * @param detectExeId
     * @return
     *
     * @mbg.generated
     */
    ExeDefenderDetectDO selectByPrimaryKey(String detectExeId);

    /**
     * 根据WHERE条件选择性更新
     * @param record
     * @param exeDefenderDetectParam
     * @return
     *
     * @mbg.generated
     */
    int updateByParamSelective(@Param("record") ExeDefenderDetectDO record, @Param("exeDefenderDetectParam") ExeDefenderDetectParam exeDefenderDetectParam);

    /**
     * 根据WHERE条件更新，不更新长文本字段
     * @param record
     * @param exeDefenderDetectParam
     * @return
     *
     * @mbg.generated
     */
    int updateByParam(@Param("record") ExeDefenderDetectDO record, @Param("exeDefenderDetectParam") ExeDefenderDetectParam exeDefenderDetectParam);

    /**
     * 根据主键选择性更新
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ExeDefenderDetectDO record);

    /**
     * 根据主键更新，不更新长文本字段
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(ExeDefenderDetectDO record);

    /**
     * 批量插入
     * @param records
     * @return
     *
     * @mbg.generated
     */
    int batchInsert(List<ExeDefenderDetectDO> records);

    /**
     * 根据主键id锁行记录进行更新
     *
     * @param detectExeId 校验执行id
     * @return 实体对象
     */
    ExeDefenderDetectDO selectByPrimaryKeyForUpdate(@Param("id") String detectExeId);

    /**
     * 批量更新校验实体忽略状态*
     * @param detectExeIds ids
     * @param ignored 校验忽略状态：Y=是，N=否
     * @return
     */
    int batchUpdateByIds(@Param("detectExeIds") List<String> detectExeIds,@Param("ignored") String ignored);
}